{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///Users/oliver.ree/Developer/Personal/Daisy/daisy-platform/src/components/Settings.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { X, Key, AlertCircle, CheckCircle, Eye, EyeOff } from 'lucide-react';\n\ninterface SettingsProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport default function Settings({ isOpen, onClose }: SettingsProps) {\n  const [apiKey, setApiKey] = useState('');\n  const [showApiKey, setShowApiKey] = useState(false);\n  const [isTestingConnection, setIsTestingConnection] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState<'idle' | 'success' | 'error'>('idle');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    // Load API key from localStorage on component mount\n    const savedApiKey = localStorage.getItem('openai_api_key');\n    if (savedApiKey) {\n      setApiKey(savedApiKey);\n    }\n  }, []);\n\n  const handleSaveApiKey = () => {\n    if (apiKey.trim()) {\n      localStorage.setItem('openai_api_key', apiKey.trim());\n      setConnectionStatus('idle');\n    } else {\n      localStorage.removeItem('openai_api_key');\n    }\n  };\n\n  const testConnection = async () => {\n    if (!apiKey.trim()) {\n      setErrorMessage('Please enter an API key first');\n      setConnectionStatus('error');\n      return;\n    }\n\n    setIsTestingConnection(true);\n    setConnectionStatus('idle');\n    setErrorMessage('');\n\n    try {\n      const response = await fetch('/api/openai', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey.trim()}`,\n        },\n        body: JSON.stringify({\n          prompt: 'Test connection - respond with just \"OK\"',\n          model: 'gpt-3.5-turbo',\n          temperature: 0.1,\n          maxTokens: 10,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        setConnectionStatus('success');\n        handleSaveApiKey(); // Auto-save on successful test\n      } else {\n        setConnectionStatus('error');\n        setErrorMessage(data.error || 'Connection test failed');\n      }\n    } catch (error) {\n      setConnectionStatus('error');\n      setErrorMessage('Network error - check your connection');\n    } finally {\n      setIsTestingConnection(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\n      <div className=\"bg-gray-800 rounded-lg shadow-xl w-full max-w-md mx-4\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-700\">\n          <div className=\"flex items-center space-x-2\">\n            <Key className=\"w-5 h-5 text-purple-400\" />\n            <h2 className=\"text-lg font-semibold text-white\">Settings</h2>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-white transition-colors\"\n          >\n            <X className=\"w-5 h-5\" />\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6 space-y-6\">\n          {/* OpenAI API Key */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              OpenAI API Key\n            </label>\n            <div className=\"relative\">\n              <input\n                type={showApiKey ? 'text' : 'password'}\n                value={apiKey}\n                onChange={(e) => setApiKey(e.target.value)}\n                placeholder=\"sk-...\"\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-purple-500 pr-10\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowApiKey(!showApiKey)}\n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-white\"\n              >\n                {showApiKey ? <EyeOff className=\"w-4 h-4\" /> : <Eye className=\"w-4 h-4\" />}\n              </button>\n            </div>\n            <p className=\"text-xs text-gray-400 mt-1\">\n              Get your API key from{' '}\n              <a\n                href=\"https://platform.openai.com/api-keys\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-purple-400 hover:text-purple-300\"\n              >\n                OpenAI Platform\n              </a>\n            </p>\n          </div>\n\n          {/* Connection Status */}\n          {connectionStatus !== 'idle' && (\n            <div className={`p-3 rounded-lg flex items-center space-x-2 ${\n              connectionStatus === 'success' \n                ? 'bg-green-900/20 text-green-400' \n                : 'bg-red-900/20 text-red-400'\n            }`}>\n              {connectionStatus === 'success' ? (\n                <CheckCircle className=\"w-4 h-4\" />\n              ) : (\n                <AlertCircle className=\"w-4 h-4\" />\n              )}\n              <span className=\"text-sm\">\n                {connectionStatus === 'success' \n                  ? 'Connection successful!' \n                  : errorMessage || 'Connection failed'\n                }\n              </span>\n            </div>\n          )}\n\n          {/* Actions */}\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={testConnection}\n              disabled={isTestingConnection || !apiKey.trim()}\n              className=\"flex-1 bg-purple-600 hover:bg-purple-700 disabled:bg-gray-600 text-white py-2 px-4 rounded-lg transition-colors flex items-center justify-center space-x-2\"\n            >\n              {isTestingConnection ? (\n                <>\n                  <div className=\"w-4 h-4 border-2 border-white/20 border-t-white rounded-full animate-spin\" />\n                  <span>Testing...</span>\n                </>\n              ) : (\n                <>\n                  <CheckCircle className=\"w-4 h-4\" />\n                  <span>Test Connection</span>\n                </>\n              )}\n            </button>\n            <button\n              onClick={() => {\n                handleSaveApiKey();\n                onClose();\n              }}\n              className=\"flex-1 bg-green-600 hover:bg-green-700 text-white py-2 px-4 rounded-lg transition-colors\"\n            >\n              Save\n            </button>\n          </div>\n\n          {/* Info */}\n          <div className=\"bg-blue-900/20 border border-blue-800/30 rounded-lg p-3\">\n            <p className=\"text-xs text-blue-300\">\n              <strong>Note:</strong> Your API key is stored locally in your browser and never sent to our servers. \n              It's only used to make direct calls to OpenAI's API from your browser.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;;;;AAUe,SAAS,SAAS,EAAE,MAAM,EAAE,OAAO,EAAiB;IACjE,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAAC;IACrC,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAC;IAC7C,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,IAAA,iNAAQ,EAAC;IAC/D,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,iNAAQ,EAA+B;IACvF,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAC;IAEjD,IAAA,kNAAS,EAAC;QACR,oDAAoD;QACpD,MAAM,cAAc,aAAa,OAAO,CAAC;QACzC,IAAI,aAAa;YACf,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAM,mBAAmB;QACvB,IAAI,OAAO,IAAI,IAAI;YACjB,aAAa,OAAO,CAAC,kBAAkB,OAAO,IAAI;YAClD,oBAAoB;QACtB,OAAO;YACL,aAAa,UAAU,CAAC;QAC1B;IACF;IAEA,MAAM,iBAAiB;QACrB,IAAI,CAAC,OAAO,IAAI,IAAI;YAClB,gBAAgB;YAChB,oBAAoB;YACpB;QACF;QAEA,uBAAuB;QACvB,oBAAoB;QACpB,gBAAgB;QAEhB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,eAAe;gBAC1C,QAAQ;gBACR,SAAS;oBACP,gBAAgB;oBAChB,iBAAiB,CAAC,OAAO,EAAE,OAAO,IAAI,IAAI;gBAC5C;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB,QAAQ;oBACR,OAAO;oBACP,aAAa;oBACb,WAAW;gBACb;YACF;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,KAAK,OAAO,EAAE;gBAChB,oBAAoB;gBACpB,oBAAoB,+BAA+B;YACrD,OAAO;gBACL,oBAAoB;gBACpB,gBAAgB,KAAK,KAAK,IAAI;YAChC;QACF,EAAE,OAAO,OAAO;YACd,oBAAoB;YACpB,gBAAgB;QAClB,SAAU;YACR,uBAAuB;QACzB;IACF;IAEA,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,uMAAG;oCAAC,WAAU;;;;;;8CACf,8OAAC;oCAAG,WAAU;8CAAmC;;;;;;;;;;;;sCAEnD,8OAAC;4BACC,SAAS;4BACT,WAAU;sCAEV,cAAA,8OAAC,iMAAC;gCAAC,WAAU;;;;;;;;;;;;;;;;;8BAKjB,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;;8CACC,8OAAC;oCAAM,WAAU;8CAA+C;;;;;;8CAGhE,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CACC,MAAM,aAAa,SAAS;4CAC5B,OAAO;4CACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;4CACzC,aAAY;4CACZ,WAAU;;;;;;sDAEZ,8OAAC;4CACC,MAAK;4CACL,SAAS,IAAM,cAAc,CAAC;4CAC9B,WAAU;sDAET,2BAAa,8OAAC,oNAAM;gDAAC,WAAU;;;;;qEAAe,8OAAC,uMAAG;gDAAC,WAAU;;;;;;;;;;;;;;;;;8CAGlE,8OAAC;oCAAE,WAAU;;wCAA6B;wCAClB;sDACtB,8OAAC;4CACC,MAAK;4CACL,QAAO;4CACP,KAAI;4CACJ,WAAU;sDACX;;;;;;;;;;;;;;;;;;wBAOJ,qBAAqB,wBACpB,8OAAC;4BAAI,WAAW,CAAC,2CAA2C,EAC1D,qBAAqB,YACjB,mCACA,8BACJ;;gCACC,qBAAqB,0BACpB,8OAAC,0OAAW;oCAAC,WAAU;;;;;yDAEvB,8OAAC,mOAAW;oCAAC,WAAU;;;;;;8CAEzB,8OAAC;oCAAK,WAAU;8CACb,qBAAqB,YAClB,2BACA,gBAAgB;;;;;;;;;;;;sCAO1B,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,SAAS;oCACT,UAAU,uBAAuB,CAAC,OAAO,IAAI;oCAC7C,WAAU;8CAET,oCACC;;0DACE,8OAAC;gDAAI,WAAU;;;;;;0DACf,8OAAC;0DAAK;;;;;;;qEAGR;;0DACE,8OAAC,0OAAW;gDAAC,WAAU;;;;;;0DACvB,8OAAC;0DAAK;;;;;;;;;;;;;8CAIZ,8OAAC;oCACC,SAAS;wCACP;wCACA;oCACF;oCACA,WAAU;8CACX;;;;;;;;;;;;sCAMH,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAE,WAAU;;kDACX,8OAAC;kDAAO;;;;;;oCAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQpC","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///Users/oliver.ree/Developer/Personal/Daisy/daisy-platform/src/components/PasswordScreen.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Lock, Eye, EyeOff } from 'lucide-react';\n\ninterface PasswordScreenProps {\n  onAuthenticated: () => void;\n}\n\nexport default function PasswordScreen({ onAuthenticated }: PasswordScreenProps) {\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n\n    // Simulate a brief loading delay for better UX\n    await new Promise(resolve => setTimeout(resolve, 300));\n\n    if (password === 'Eucalyptus') {\n      // Store authentication in localStorage\n      localStorage.setItem('daisy-auth', 'authenticated');\n      onAuthenticated();\n    } else {\n      setError('Incorrect password. Please try again.');\n      setPassword('');\n    }\n    \n    setIsLoading(false);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 flex items-center justify-center p-4\">\n      <div className=\"max-w-md w-full\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <div className=\"mx-auto w-16 h-16 bg-purple-600 rounded-full flex items-center justify-center mb-4\">\n            <Lock className=\"w-8 h-8 text-white\" />\n          </div>\n          <h1 className=\"text-3xl font-bold text-white mb-2\">Daisy AI</h1>\n          <p className=\"text-gray-300\">Secure AI Workflow Editor</p>\n        </div>\n\n        {/* Password Form */}\n        <div className=\"bg-gray-800 rounded-lg shadow-2xl p-8 border border-gray-700\">\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Access Password\n              </label>\n              <div className=\"relative\">\n                <input\n                  id=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  className=\"w-full px-4 py-3 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\n                  placeholder=\"Enter password to continue...\"\n                  required\n                  disabled={isLoading}\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-white transition-colors\"\n                  disabled={isLoading}\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"w-5 h-5\" />\n                  ) : (\n                    <Eye className=\"w-5 h-5\" />\n                  )}\n                </button>\n              </div>\n              {error && (\n                <p className=\"mt-2 text-sm text-red-400 flex items-center space-x-1\">\n                  <span>⚠️</span>\n                  <span>{error}</span>\n                </p>\n              )}\n            </div>\n\n            <button\n              type=\"submit\"\n              disabled={isLoading || !password}\n              className=\"w-full bg-purple-600 hover:bg-purple-700 disabled:bg-gray-600 disabled:cursor-not-allowed text-white font-medium py-3 px-4 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 focus:ring-offset-gray-800\"\n            >\n              {isLoading ? (\n                <span className=\"flex items-center justify-center space-x-2\">\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                  <span>Verifying...</span>\n                </span>\n              ) : (\n                'Access Workflow Editor'\n              )}\n            </button>\n          </form>\n\n          {/* Footer */}\n          <div className=\"mt-6 text-center\">\n            <p className=\"text-xs text-gray-500\">\n              Authorized users only • Secure access required\n            </p>\n          </div>\n        </div>\n\n        {/* Features Preview */}\n        <div className=\"mt-8 text-center\">\n          <p className=\"text-gray-400 text-sm mb-4\">AI Workflow Editor Features:</p>\n          <div className=\"grid grid-cols-2 gap-4 text-xs\">\n            <div className=\"bg-gray-800/50 rounded-lg p-3 border border-gray-700\">\n              <div className=\"text-blue-400 mb-1\">🤖</div>\n              <div className=\"text-gray-300\">GPT-4o Vision</div>\n            </div>\n            <div className=\"bg-gray-800/50 rounded-lg p-3 border border-gray-700\">\n              <div className=\"text-purple-400 mb-1\">🎨</div>\n              <div className=\"text-gray-300\">DALL-E 3</div>\n            </div>\n            <div className=\"bg-gray-800/50 rounded-lg p-3 border border-gray-700\">\n              <div className=\"text-green-400 mb-1\">🔗</div>\n              <div className=\"text-gray-300\">Node Editor</div>\n            </div>\n            <div className=\"bg-gray-800/50 rounded-lg p-3 border border-gray-700\">\n              <div className=\"text-yellow-400 mb-1\">⚡</div>\n              <div className=\"text-gray-300\">Drag & Drop</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 741, "column": 0}, "map": {"version":3,"sources":["file:///Users/oliver.ree/Developer/Personal/Daisy/daisy-platform/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport dynamic from 'next/dynamic';\nimport { useState, useEffect } from 'react';\nimport { Plus, Save, Play, Zap, FileText, Image, Brain, Settings, LogOut } from 'lucide-react';\nimport SettingsModal from '@/components/Settings';\nimport PasswordScreen from '@/components/PasswordScreen';\n\n// Dynamically import the WorkflowCanvas to avoid SSR issues\nconst WorkflowCanvas = dynamic(() => import('@/components/WorkflowCanvas'), { \n  ssr: false,\n  loading: () => (\n    <div className=\"h-screen bg-gray-900 flex items-center justify-center\">\n      <div className=\"text-white\">Loading Workflow Editor...</div>\n    </div>\n  )\n});\n\nexport default function Home() {\n  const [showSettings, setShowSettings] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check for existing authentication on page load\n  useEffect(() => {\n    const checkAuth = () => {\n      const authStatus = localStorage.getItem('daisy-auth');\n      setIsAuthenticated(authStatus === 'authenticated');\n      setIsLoading(false);\n    };\n    \n    checkAuth();\n  }, []);\n\n  const handleAuthenticated = () => {\n    setIsAuthenticated(true);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('daisy-auth');\n    setIsAuthenticated(false);\n  };\n\n  // Show loading spinner while checking auth\n  if (isLoading) {\n    return (\n      <div className=\"h-screen bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-8 h-8 border-2 border-purple-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <div className=\"text-white text-sm\">Loading...</div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show password screen if not authenticated\n  if (!isAuthenticated) {\n    return <PasswordScreen onAuthenticated={handleAuthenticated} />;\n  }\n\n  return (\n    <div className=\"h-screen bg-gray-900 text-white flex flex-col\">\n      {/* Header */}\n      <header className=\"bg-gray-800 border-b border-gray-700 px-4 py-3 flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-8 h-8 bg-purple-600 rounded-lg flex items-center justify-center\">\n            <Zap className=\"w-5 h-5 text-white\" />\n          </div>\n          <div>\n            <h1 className=\"text-xl font-bold\">Daisy</h1>\n            <p className=\"text-xs text-gray-400\">AI Workflow Editor</p>\n          </div>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <button \n            onClick={() => setShowSettings(true)}\n            className=\"px-3 py-1.5 bg-gray-700 hover:bg-gray-600 rounded text-sm flex items-center space-x-1\"\n          >\n            <Settings className=\"w-4 h-4\" />\n            <span>Settings</span>\n          </button>\n          <button className=\"px-3 py-1.5 bg-gray-700 hover:bg-gray-600 rounded text-sm flex items-center space-x-1\">\n            <Save className=\"w-4 h-4\" />\n            <span>Save</span>\n          </button>\n          <button className=\"px-3 py-1.5 bg-green-600 hover:bg-green-700 rounded text-sm flex items-center space-x-1\">\n            <Play className=\"w-4 h-4\" />\n            <span>Run</span>\n          </button>\n          <button \n            onClick={handleLogout}\n            className=\"px-3 py-1.5 bg-red-600 hover:bg-red-700 rounded text-sm flex items-center space-x-1\"\n            title=\"Logout\"\n          >\n            <LogOut className=\"w-4 h-4\" />\n            <span>Logout</span>\n          </button>\n        </div>\n      </header>\n\n      {/* Sidebar */}\n      <div className=\"flex flex-1\">\n        <aside className=\"w-64 bg-gray-800 border-r border-gray-700 p-4\">\n          <h2 className=\"text-sm font-semibold text-gray-300 mb-4\">Node Library</h2>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <h3 className=\"text-xs font-medium text-gray-400 mb-2\">INPUTS</h3>\n              <div className=\"space-y-2\">\n                <button \n                  className=\"w-full p-3 bg-blue-600/20 border border-blue-600/30 rounded-lg text-left hover:bg-blue-600/30 transition-colors\"\n                  draggable\n                  onDragStart={(e) => {\n                    e.dataTransfer.setData('application/reactflow', 'textInput');\n                    e.dataTransfer.effectAllowed = 'move';\n                  }}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <FileText className=\"w-4 h-4 text-blue-400\" />\n                    <span className=\"text-sm\">Text Input</span>\n                  </div>\n                  <p className=\"text-xs text-gray-400 mt-1\">Add text content</p>\n                </button>\n\n                <button \n                  className=\"w-full p-3 bg-green-600/20 border border-green-600/30 rounded-lg text-left hover:bg-green-600/30 transition-colors\"\n                  draggable\n                  onDragStart={(e) => {\n                    e.dataTransfer.setData('application/reactflow', 'imageInput');\n                    e.dataTransfer.effectAllowed = 'move';\n                  }}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <Image className=\"w-4 h-4 text-green-400\" />\n                    <span className=\"text-sm\">Image Input</span>\n                  </div>\n                  <p className=\"text-xs text-gray-400 mt-1\">Upload or reference images</p>\n                </button>\n              </div>\n            </div>\n\n            <div>\n              <h3 className=\"text-xs font-medium text-gray-400 mb-2\">PROCESSING</h3>\n              <div className=\"space-y-2\">\n                <button \n                  className=\"w-full p-3 bg-purple-600/20 border border-purple-600/30 rounded-lg text-left hover:bg-purple-600/30 transition-colors\"\n                  draggable\n                  onDragStart={(e) => {\n                    e.dataTransfer.setData('application/reactflow', 'aiPrompt');\n                    e.dataTransfer.effectAllowed = 'move';\n                  }}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <Brain className=\"w-4 h-4 text-purple-400\" />\n                    <span className=\"text-sm\">AI Prompt</span>\n                  </div>\n                  <p className=\"text-xs text-gray-400 mt-1\">Generate AI responses</p>\n                </button>\n\n                <button \n                  className=\"w-full p-3 bg-yellow-600/20 border border-yellow-600/30 rounded-lg text-left hover:bg-yellow-600/30 transition-colors\"\n                  draggable\n                  onDragStart={(e) => {\n                    e.dataTransfer.setData('application/reactflow', 'textProcessor');\n                    e.dataTransfer.effectAllowed = 'move';\n                  }}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <Zap className=\"w-4 h-4 text-yellow-400\" />\n                    <span className=\"text-sm\">Text Processor</span>\n                  </div>\n                  <p className=\"text-xs text-gray-400 mt-1\">Transform text content</p>\n                </button>\n\n                <button \n                  className=\"w-full p-3 bg-orange-600/20 border border-orange-600/30 rounded-lg text-left hover:bg-orange-600/30 transition-colors\"\n                  draggable\n                  onDragStart={(e) => {\n                    e.dataTransfer.setData('application/reactflow', 'imageGeneration');\n                    e.dataTransfer.effectAllowed = 'move';\n                  }}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <Zap className=\"w-4 h-4 text-orange-400\" />\n                    <span className=\"text-sm\">Image Generation</span>\n                  </div>\n                  <p className=\"text-xs text-gray-400 mt-1\">Create images with DALL-E</p>\n                </button>\n              </div>\n            </div>\n\n            <div>\n              <h3 className=\"text-xs font-medium text-gray-400 mb-2\">OUTPUTS</h3>\n              <div className=\"space-y-2\">\n                <button \n                  className=\"w-full p-3 bg-red-600/20 border border-red-600/30 rounded-lg text-left hover:bg-red-600/30 transition-colors\"\n                  draggable\n                  onDragStart={(e) => {\n                    e.dataTransfer.setData('application/reactflow', 'output');\n                    e.dataTransfer.effectAllowed = 'move';\n                  }}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <Zap className=\"w-4 h-4 text-red-400\" />\n                    <span className=\"text-sm\">Output</span>\n                  </div>\n                  <p className=\"text-xs text-gray-400 mt-1\">Final workflow result</p>\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"mt-8\">\n            <button className=\"w-full p-2 bg-gray-700 hover:bg-gray-600 rounded text-sm flex items-center justify-center space-x-1\">\n              <Plus className=\"w-4 h-4\" />\n              <span>New Workflow</span>\n            </button>\n          </div>\n        </aside>\n\n        {/* Main Canvas */}\n        <main className=\"flex-1 relative\">\n          <WorkflowCanvas />\n        </main>\n      </div>\n\n      {/* Settings Modal */}\n      <SettingsModal isOpen={showSettings} onClose={() => setShowSettings(false)} />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}